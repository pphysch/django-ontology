# Generated by Django 4.0.4 on 2022-05-18 23:40

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='Action',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('slug', models.SlugField(max_length=255, unique=True)),
                ('description', models.TextField()),
                ('subject_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='actions_as_subject', to='contenttypes.contenttype')),
                ('target_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='actions_as_target', to='contenttypes.contenttype')),
            ],
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='contenttypes.contenttype')),
            ],
            options={
                'verbose_name_plural': 'entities',
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.SlugField()),
                ('value', models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Policy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='A unique name to identify this policy.', max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('deny', models.BooleanField(default=False)),
                ('priority', models.IntegerField(default=0)),
                ('expiration_time', models.DateTimeField(blank=True, null=True)),
                ('actions', models.ManyToManyField(to='ontology.action')),
                ('subject_tags', models.ManyToManyField(related_name='policies_as_subject', to='ontology.tag')),
                ('target_tags', models.ManyToManyField(related_name='policies_as_target', to='ontology.tag')),
            ],
            options={
                'verbose_name_plural': 'policies',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('deny', models.BooleanField(editable=False)),
                ('priority', models.IntegerField(editable=False)),
                ('is_synced', models.BooleanField(default=False, editable=False)),
                ('last_sync_attempt_time', models.DateTimeField(default=None, editable=False, null=True)),
                ('action', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.RESTRICT, to='ontology.action')),
                ('policy', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to='ontology.policy')),
                ('subject', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='permissions_as_subject', to='ontology.entity')),
                ('target', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='permissions_as_target', to='ontology.entity')),
            ],
        ),
        migrations.CreateModel(
            name='Note',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('score', models.IntegerField(default=0)),
                ('text', models.TextField(null=True)),
                ('created_time', models.DateTimeField(auto_now_add=True)),
                ('updated_time', models.DateTimeField(auto_now=True)),
                ('deleted_time', models.DateTimeField(blank=True, editable=False, null=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='ontology.entity')),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='notes', to='ontology.entity')),
                ('reply_to', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='replies', to='ontology.note')),
            ],
            options={
                'ordering': ['-score', '-created_time'],
            },
        ),
        migrations.AddField(
            model_name='entity',
            name='tags',
            field=models.ManyToManyField(to='ontology.tag'),
        ),
        migrations.AddIndex(
            model_name='permission',
            index=models.Index(fields=['subject', 'action', 'target', 'priority'], name='ontology_pe_subject_1e8147_idx'),
        ),
        migrations.AddConstraint(
            model_name='permission',
            constraint=models.UniqueConstraint(fields=('policy', 'subject', 'action', 'target'), name='unique_permission'),
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['entity', '-score', '-created_time'], name='ontology_no_entity__c84d11_idx'),
        ),
        migrations.AddIndex(
            model_name='note',
            index=models.Index(fields=['author'], name='ontology_no_author__3d58aa_idx'),
        ),
    ]
